Compilation Results:
********************

load_tuples test: 10 pts total
Test 1: load tuple
+5: load_tuples: m,n,nnz match
+5: load_tuples: nodes match

gv_tuples test: 6 pts total
Test 2: gv
+6: gv_tuples

set_tuples test: 44 pts total
Test 3-0: set
+6: set_tuples: delete node at tail
Test 3-1: set
+6: set_tuples: add node at head
Test 3-2: set
+6: set_tuples: add node in the middle
Test 3-3: set
+6: set_tuples: add node at tail
Test 3-4: set
values in node does not match
Test 3-5: set
values in node does not match
Test 3-6: set
+6: set_tuples: delete node at tail

add_tuples test: 15 pts total
Test 4: add
 +15: add_tuples pass

save_tuples test: 10 pts total
Test 6: save
testing save_tuples, saving to save_test_tuples.txt

Printing diff of save tuples. If empty, 10 pts
diff: grade/save_test_tuples.txt: No such file or directory

10
destroy_tuples test: 5 pts total
Printing valgrind output. If no memory leaks/errors, 5 pts
==25501== Memcheck, a memory error detector
==25501== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==25501== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==25501== Command: ./test0 7
==25501== 
==25501== Conditional jump or move depends on uninitialised value(s)
==25501==    at 0x401941: set_tuples (sparsemat.c:77)
==25501==    by 0x401E06: add_tuples (sparsemat.c:215)
==25501==    by 0x4013F1: main (test0.c:456)
==25501== 
==25501== Invalid read of size 8
==25501==    at 0x401EF1: destroy_tuples (sparsemat.c:239)
==25501==    by 0x401401: main (test0.c:457)
==25501==  Address 0x5205630 is 16 bytes inside a block of size 24 free'd
==25501==    at 0x4C2B06D: free (vg_replace_malloc.c:540)
==25501==    by 0x401EEC: destroy_tuples (sparsemat.c:240)
==25501==    by 0x401401: main (test0.c:457)
==25501==  Block was alloc'd at
==25501==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==25501==    by 0x400AB6: set_tuples_gold (test0.c:77)
==25501==    by 0x400D04: load_tuples_gold (test0.c:162)
==25501==    by 0x4013CC: main (test0.c:454)
==25501== 
==25501== Invalid read of size 8
==25501==    at 0x401EF1: destroy_tuples (sparsemat.c:239)
==25501==    by 0x40140D: main (test0.c:458)
==25501==  Address 0x5206090 is 16 bytes inside a block of size 24 free'd
==25501==    at 0x4C2B06D: free (vg_replace_malloc.c:540)
==25501==    by 0x401EEC: destroy_tuples (sparsemat.c:240)
==25501==    by 0x40140D: main (test0.c:458)
==25501==  Block was alloc'd at
==25501==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==25501==    by 0x400AB6: set_tuples_gold (test0.c:77)
==25501==    by 0x400D04: load_tuples_gold (test0.c:162)
==25501==    by 0x4013DA: main (test0.c:455)
==25501== 
==25501== Invalid read of size 8
==25501==    at 0x401EF1: destroy_tuples (sparsemat.c:239)
==25501==    by 0x401419: main (test0.c:459)
==25501==  Address 0x5206570 is 16 bytes inside a block of size 24 free'd
==25501==    at 0x4C2B06D: free (vg_replace_malloc.c:540)
==25501==    by 0x401EEC: destroy_tuples (sparsemat.c:240)
==25501==    by 0x401419: main (test0.c:459)
==25501==  Block was alloc'd at
==25501==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==25501==    by 0x40194C: set_tuples (sparsemat.c:78)
==25501==    by 0x401E06: add_tuples (sparsemat.c:215)
==25501==    by 0x4013F1: main (test0.c:456)
==25501== 
==25501== 
==25501== HEAP SUMMARY:
==25501==     in use at exit: 0 bytes in 0 blocks
==25501==   total heap usage: 65 allocs, 65 frees, 2,648 bytes allocated
==25501== 
==25501== All heap blocks were freed -- no leaks are possible
==25501== 
==25501== Use --track-origins=yes to see where uninitialised values come from
==25501== For lists of detected and suppressed errors, rerun with: -s
==25501== ERROR SUMMARY: 61 errors from 4 contexts (suppressed: 0 from 0)

Grade:
******
Late submission: 0
Functionality: 76
Comments and Style: 5
Intro paragraph: 5
Total: 86
